version: '3.8'

services:
  web:
    build: .
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/app
      - ./certs:/app/certs
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - USE_HTTPS=${USE_HTTPS:-false}
      - SSL_CERT_FILE=/app/certs/cert.pem
      - SSL_KEY_FILE=/app/certs/key.pem
      - GRAFANA_USER=${GRAFANA_USER}
      - GRAFANA_PASSWORD=${GRAFANA_PASSWORD}
    depends_on:
      - db
      - grafana
    networks:
      - analytics-network
    restart: always

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - analytics-network
    restart: always

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - analytics-network
    restart: always

networks:
  analytics-network:
    driver: bridge

volumes:
  postgres-data:
  grafana-data: